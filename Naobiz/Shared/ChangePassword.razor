@inherits OwningComponentBase<AppDbContext>
@inject NavigationManager NavigationManager
@inject UserService UserService

<Validations @ref="validations" Mode="ValidationMode.Manual">
    <Field>
        <FieldLabel>Email:</FieldLabel>
        <TextEdit ReadOnly="true" Text="@currentUser?.Email" />
    </Field>
    <Field>
        <FieldLabel>Contraseña anterior:</FieldLabel>
        <Validation Validator="ValidationRule.IsNotEmpty">
            <TextEdit Role="TextRole.Password" @bind-Text="oldPassword" />
        </Validation>
    </Field>
    <Field>
        <FieldLabel>Contraseña:</FieldLabel>
        <Validation Validator="Helper.IsPasswordValid">
            <TextEdit Role="TextRole.Password" @bind-Text="password" />
        </Validation>
        <FieldHelp>@Helper.PasswordRuleDescription</FieldHelp>
    </Field>
    <Field>
        <FieldLabel>Confirmar contraseña:</FieldLabel>
        <Validation Validator="e => Helper.IsPasswordConfirmed(e, password)">
            <TextEdit Role="TextRole.Password">
                <Feedback>
                    <ValidationError>La contraseña y su confirmación no coinciden</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
    </Field>
    <Field>
        <Button Color="Color.Primary" Clicked="SubmitChanges">Cambiar contraseña</Button>
    </Field>
    <Alert Color="Color.Warning" Visible="alertMessage != null">@alertMessage</Alert>
</Validations>

@code {
    User currentUser;
    string password;
    string oldPassword;
    string alertMessage;
    Validations validations;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await UserService.GetCurrentAsync(Service);
    }

    private async Task SubmitChanges()
    {
        if (!validations.ValidateAll())
        {
            return;
        }

        if (currentUser.VerifyPassword(oldPassword))
        {
            currentUser.SetPassword(password);
            await Service.SaveChangesAsync();

            NavigationManager.NavigateTo("");
        }
        else
        {
            alertMessage = "La contraseña anterior es inválida";
        }
    }
}
