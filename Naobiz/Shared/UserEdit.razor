<Modal @ref="modal">
    <ModalBackdrop />
    <ModalContent Centered="true" Size="ModalSize.Default">
        <ModalHeader>
            <ModalTitle>Usuario</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Grupo:</FieldLabel>
                <Select2 @ref="groupSelect" TItem="UserGroup" KeyGetter="item => item.Id" TextGetter="item => item.Name" Items="groups" @bind-SelectedItem="group" Nullable="true" />
            </Field>
            <Field>
                <Check @bind-Checked="admin">Administrador</Check>
            </Field>
            <Field>
                <Check @bind-Checked="paid">Pagado</Check>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="Submit">Enviar</Button>
            <Button Color="Color.Secondary" Clicked="Close">Cerrar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public AppDbContext Service { get; set; }

    [Parameter]
    public EventCallback Submitted { get; set; }

    List<UserGroup> groups;
    UserGroup group;
    Select2<UserGroup> groupSelect;
    bool admin;
    bool paid;
    Modal modal;

    public async Task Show(User user)
    {
        groups = await Service.UserGroups.OrderBy(userGroup => userGroup.Name).ToListAsync();
        group = user.Group;
        admin = user.Admin;
        paid = user.Paid;

        modal.Show();

        groupSelect.Focus();
    }

    public void Get(User user)
    {
        user.Group = group;
        user.Admin = admin;
        user.Paid = paid;
    }

    private async Task Submit()
    {
        modal.Hide();
        await Submitted.InvokeAsync(null);
    }

    private void Close()
    {
        modal.Hide();
    }
}
