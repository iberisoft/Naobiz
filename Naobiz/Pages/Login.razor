@page "/login"

@inherits OwningComponentBase<AppDbContext>
@inject NavigationManager NavigationManager

<Heading Size="HeadingSize.Is1">Iniciar sesión</Heading>

<Row>
    <Column ColumnSize="ColumnSize.IsThird.IsThird.WithOffset">
        <Field>
            <FieldLabel>Email:</FieldLabel>
            <TextEdit @bind-Text="email" />
        </Field>
        <Field>
            <FieldLabel>Contraseña:</FieldLabel>
            <TextEdit Role="TextRole.Password" @bind-Text="password" />
        </Field>
        <Field>
            <Button @ref="enterButton" Color="Color.Primary" Clicked="LoginAccount">Entrar</Button>
            <Button Color="Color.Link" Float="Float.Right" Clicked="RegisterAccount">Darse de alta</Button>
        </Field>
        <Field>
            <Button Color="Color.Link" Clicked="RecoverPassword">Recuperar contraseña</Button>
        </Field>
        <Alert Color="Color.Warning" Visible="alertMessage != null">@alertMessage</Alert>
    </Column>
</Row>

@code {
    string email;
    string password;
    string alertMessage;
    Button enterButton;

    public string Email { get; set; }

    protected override void OnInitialized()
    {
        NavigationManager.ParseQueryString(this);

        email = Email;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (enterButton != null)
        {
            enterButton.Focus();
            enterButton = null;
        }
    }

    private async Task LoginAccount()
    {
        var user = await Service.Users.SingleOrDefaultAsync(user => user.Email == email);
        if (user?.VerifyPassword(password) == true)
        {
            await Service.Entry(user).ReloadAsync();
            if (user.ActivationCode == null)
            {
                var uri = "_login";
                uri = QueryHelpers.AddQueryString(uri, "email", email);
                uri = QueryHelpers.AddQueryString(uri, "password", password);
                NavigationManager.NavigateTo(uri, true);
            }
            else
            {
                alertMessage = "Por favor active su cuenta";
            }
        }
        else
        {
            alertMessage = "Email o contraseña inválido";
        }
    }

    private void RegisterAccount() => NavigationManager.NavigateTo("register");

    private void RecoverPassword() => NavigationManager.NavigateTo("recover-password");
}
