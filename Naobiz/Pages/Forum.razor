@page "/forum"

@inherits OwningComponentBase<AppDbContext>
@inject UserService UserService

@if (groups == null)
{
    <Paragraph>Loading...</Paragraph>
    return;
}

<Panel Class="page-forum">
    <Heading Size="HeadingSize.Is1">Foro</Heading>

    <Row>
        @foreach (var group in groups)
        {
            var linkUrl = "forum/" + group.Id;
            <Column ColumnSize="ColumnSize.IsQuarter">
                <Card Margin="Margin.Is4.OnY">
                    @if (group.ImageSource != null)
                    {
                        <CardLink Source="@linkUrl">
                            <CardImage Source="@group.ImageSource" />
                        </CardLink>
                    }
                    <CardBody>
                        <CardTitle Size="5">
                            @group.Name
                            @if (group.UserGroup != null)
                            {
                                <Icon Name="IconName.Lock" />
                            }
                        </CardTitle>
                        <CardLink Source="@linkUrl">Conversaciones: @topicCount[group]</CardLink>
                        @if (currentUser?.Admin == true)
                        {
                            <Panel Float="Float.Right">
                                <Button Color="Color.Primary" IsOutline="true" Size="ButtonSize.Small" Clicked="async () => await EditGroup(group)">Editar</Button>
                                @if (topicCount[group] == 0)
                                {
                                    <Button Color="Color.Danger" IsOutline="true" Size="ButtonSize.Small" Clicked="() => DeleteGroup(group)">Eliminar</Button>
                                }
                            </Panel>
                        }
                    </CardBody>
                </Card>
            </Column>
        }
        <Column ColumnSize="ColumnSize.IsQuarter">
            @if (currentUser?.Admin == true)
            {
                <Button Color="Color.Primary" IsOutline="true" Size="ButtonSize.Small" Margin="Margin.Is4.OnY" Clicked="CreateGroup">Nuevo</Button>
            }
        </Column>
    </Row>

    @if (currentUser?.Admin == true)
    {
        <ForumGroupEdit @ref="groupEdit" Service="Service" Submitted="SubmitGroup" />
        <Confirm @ref="deleteGroupConfirm" Text="Eliminar el grupo del foro?" Confirmed="DeleteGroup" />
    }
</Panel>

@code {
    User currentUser;
    List<ForumGroup> groups;
    Dictionary<ForumGroup, int> topicCount;
    ForumGroup activeGroup;
    ForumGroupEdit groupEdit;
    Confirm deleteGroupConfirm;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await UserService.GetCurrentAsync(Service);

        await UpdateGroups();
    }

    private async Task UpdateGroups()
    {
        groups = await Service.GetForumGroups(currentUser).OrderBy(group => group.Name).ToListAsync();
        topicCount = new Dictionary<ForumGroup, int>();
        foreach (var group in groups)
        {
            topicCount[group] = await Service.ForumTopics.CountAsync(topic => topic.Group == group);
        }
    }

    private async Task CreateGroup()
    {
        activeGroup = new ForumGroup();
        await groupEdit.Show(activeGroup);
    }

    private async Task EditGroup(ForumGroup group)
    {
        activeGroup = group;
        await groupEdit.Show(activeGroup);
    }

    private void DeleteGroup(ForumGroup group)
    {
        activeGroup = group;
        deleteGroupConfirm.Show();
    }

    private async Task SubmitGroup()
    {
        groupEdit.Get(activeGroup);
        if (activeGroup.Id == 0)
        {
            Service.ForumGroups.Add(activeGroup);
        }

        await Service.SaveChangesAsync();

        await UpdateGroups();
    }

    private async Task DeleteGroup()
    {
        Service.ForumGroups.Remove(activeGroup);

        await Service.SaveChangesAsync();

        await UpdateGroups();
    }
}
